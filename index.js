import { cardListData } from './scripts/cardListData'
console.log(cardListData)

// –Ω–∞—á–∏–Ω–∞–µ–º —Å –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
window.application = {
    // —Å–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è/–∏–≥—Ä—ã
    blocks: {},
    screens: {},
    renderScreen: function (screenName) {
        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞–±–æ—á–µ–≥–æ —ç–∫—Ä–∞–Ω–∞ –∏–≥—Ä—ã
        if (!window.application.screens[screenName]) {
            // screens - —ç–∫—Ä–∞–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
            console.log('–¢–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        } else {
            this.screens[screenName]
        }
        window.application.timers.forEach((element) => {
            clearInterval(element)
        })
    },

    renderBlock: function (blockName, container) {
        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –±–ª–æ–∫–∞
        if (!window.application.blocks[blockName]) {
            console.log('–¢–∞–∫–æ–≥–æ –±–ª–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        } else {
            this.blocks[blockName](container)
        }
    },
    timers: [], // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    level: [], // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
}

// –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à–∏ –±—É–¥—É—â–∏–µ —ç–∫—Ä–∞–Ω—ã

window.application.screens = {
    //—Å–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω—ã –¥–ª—è –≤—Å–µ–π –∏–≥—Ä—ã
    'level-choice': renderLevelScreen,
    'level-one': renderLevelOneScreen,
    'level-two': renderLevelTwoScreen,
    'level-three': renderLevelThreeScreen,
    // win: renderWinScreen,
    // lose: renderLoseScreen,
}

window.application.blocks = {
    // —Å–æ–∑–¥–∞–µ–º –±–ª–æ–∫–∏ –¥–ª—è –≤—Å–µ–π –∏–≥—Ä—ã, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º–∏
    'level-button': renderLevelButton,
    'button-one': renderButtonOne,
    'button-two': renderButtonTwo,
    'button-three': renderButtonThree,
    //  'win-text': renderWinText,
    //  'lose-text': renderLoseText,
}

//–ó–∞—Ç–µ–º –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—à–µ–º—É –¥–∏–≤—É –∏ –æ–±—ä—è–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–º

const app = document.querySelector('.root')
// –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º—É —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –¥–∏–≤—É

//—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω

const title = document.createElement('h2')
// —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫

// –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤—ã–±–æ—Ä–æ–º —É—Ä–æ–≤–Ω—è, –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—è –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É, –≥–¥–µ –ø–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–∏

function renderLevelButton() {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    const container = document.createElement('div')
    container.classList.add('container')

    title.textContent = '–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å'
    // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    title.classList.add('title')
    container.appendChild(title)

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –∏ —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫–∏

    // –í—ã–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∏ –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã

    const prodCheckbox = document.createElement('div')
    prodCheckbox.classList.add('prod-checkbox')

    const divButton = document.createElement('div')
    divButton.classList.add('div-button')

    const choiceButtonOne = document.createElement('input')
    choiceButtonOne.type = 'radio'
    choiceButtonOne.name = 'r'
    choiceButtonOne.value = 'easy'
    choiceButtonOne.id = 'l1'
    choiceButtonOne.classList.add('choice-button-one')

    const label1 = document.createElement('label')
    label1.setAttribute('for', 'l1')
    label1.innerHTML = '1'
    divButton.appendChild(label1)
    divButton.appendChild(choiceButtonOne)

    //—Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
    const choiceButtonTwo = document.createElement('input')
    choiceButtonTwo.type = 'radio'
    choiceButtonTwo.name = 'r'
    choiceButtonTwo.value = 'middle'
    choiceButtonTwo.id = 'l2'
    choiceButtonTwo.classList.add('choice-button-two')

    const label2 = document.createElement('label')
    label2.setAttribute('for', 'l2')
    label2.innerHTML = '2'
    divButton.appendChild(label2)
    divButton.appendChild(choiceButtonTwo)

    //—Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
    const choiceButtonThree = document.createElement('input')
    choiceButtonThree.type = 'radio'
    choiceButtonThree.name = 'r'
    choiceButtonThree.value = 'hard'
    choiceButtonThree.id = 'l3'
    choiceButtonThree.classList.add('choice-button-three')

    const label3 = document.createElement('label')
    label3.setAttribute('for', 'l3')
    label3.innerHTML = '3'
    divButton.appendChild(label3)
    divButton.appendChild(choiceButtonThree)

    //—Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
    const divStart = document.createElement('div')
    const button = document.createElement('button')
    button.textContent = '–°—Ç–∞—Ä—Ç'
    button.classList.add('button')
    button.id = 'button'
    divStart.appendChild(button)
    // –∫–Ω–æ–ø–∫–∞ —Å—Ç—Ä–∞—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è

    button.addEventListener('click', function () {
        const radios = document.querySelectorAll('input') // –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫–æ –≤—Å–µ–º —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∞–º

        for (let i = 0; i < radios.length; i++) {
            /* console.log(radios[i].checked) */
            /* –ï—Å–ª–∏ —Ä–∞–¥–∏–æ –∞–∫—Ç–∏–≤–µ–Ω */
            if (radios[i].checked) {
                /* –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –∏–≥—Ä—ã */
                gameMode = radios[i].value
                console.log(gameMode)
            }
        }
    })

    setLevel()

    prodCheckbox.appendChild(divButton)
    container.appendChild(prodCheckbox)
    container.appendChild(divStart)
    app.appendChild(container)
}

let gameMode = ''

function setLevel() {
    let radios = document.querySelectorAll('input')
    console.log('üöÄ ~ file: index.js:193 ~ setLevel ~ radios:', radios)
}

function renderButtonOne() {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    const container = document.createElement('div')
    container.classList.add('container')

    let timerMinute = document.createElement('span')
    timerMinute.id = 'minute'
    timerMinute.label = '00'
    let timerSecond = document.createElement('span')
    timerSecond.id = 'second'
    timerSecond.label = '00'

    let timer = 0
    let timerInterval
    const second = document.getElementById('second')
    const minute = document.getElementById('minute')

    renderLevelButton()
    finalTimer()

    timerInterval = setInterval(function () {
        timer += 1 / 60
        timerSecond = Math.floor(timer) - Math.floor(timer / 60) * 60
        timerMinute = Math.floor(timer / 60)
        second.innerHTML =
            timerSecond < 10 ? '0' + timerSecond.toString() : timerSecond
        minute.innerHTML =
            timerMinute < 10 ? '0' + timerMinute.toString() : timerMinute
    }, 1000 / 60)

    function finalTimer() {
        clearInterval(timerInterval)
    }

    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä
    timerInterval.classList.add('startTimer')

    const array = []
    for (let i = 0; i < 3; i++) {
        const random = Math.floor(Math.random() * cardListData.length)
        array.push(cardListData[random])
        // shuffle(arrayNew);
    }
    const arrayNew = array.concat(array)
    console.log(arrayNew)

    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä
    //  let moves = 0 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    let firstCard
    let secondCard
    let isCardFlipped = false

    // eslint-disable-next-line no-inner-declarations
    function flipCard() {
        console.log('flipping card')
        // –ï—Å–ª–∏ —É–∂–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        if (firstCard === this) return
        // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–∏ —Ä–∞–∑—É –Ω–µ –±—ã–ª–∞ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞, —Ç–æ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞
        if (!isCardFlipped) {
            // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É
            firstCard = this
            // –ó–∞–¥–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ –º—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª–∏ –∫–∞—Ä—Ç—É
            isCardFlipped = true
            // –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
            return
        }
        // –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–¥ –¥–æ—à–µ–ª –¥–æ —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏
        // –∑–Ω–∞—á–∏—Ç –Ω–µ –±—ã–ª–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–∞—Ä—Ç–∞ —É–∂–µ –±—ã–ª–∞ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞ (isCardFlipped —Ä–∞–≤–µ–Ω true)
        // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–∞–∫ –≤—Ç–æ—Ä—É—é –∫–∞—Ä—Ç—É
        secondCard = this

        // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ flipCard, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç—É
        checkWin()
    }

    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ä—Ç—ã
    function checkWin() {
        // –°–º–æ—Ç—Ä–∏–º, –∫–∞–∫–∏–µ —É –Ω–∏—Ö data –∞—Ç—Ä–∏–±—É—Ç—ã
        console.log('check first card: ', firstCard.dataset.framework)
        console.log('check second card: ', secondCard.dataset.framework)

        let winResult = false

        if (firstCard.dataset.framework === secondCard.dataset.framework) {
            winResult = true
            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä
            // moves++ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        }

        console.log('üöÄ ~ file: level.js:58 ~ checkWin ~ winResult:', winResult)

        if (winResult /* && moves === 3 */) {
            alert('–í—ã –ø–æ–±–µ–¥–∏–ª–∏')
        }

        // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ
        // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–¥–ø–∏—Å—å –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏
    }
    arrayNew.forEach((card) => {
        const cardElem = document.createElement(card.elem)
        cardElem.setAttribute('src', card.src)

        // –ó–∞–¥–∞–µ–º data –∞—Ç—Ä–∏–±—É—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ –ø—É—Ç–∏ –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        cardElem.setAttribute('data-framework', card.src)

        container.appendChild(cardElem)
        function coupCard() {
            cardElem.setAttribute('src', card.cardShirt)
        }
        setTimeout(coupCard, 5000)
        cardElem.addEventListener('click', flipCard)
        cardElem.addEventListener('click', function () {
            cardElem.setAttribute('src', card.src)
        })
    })

    const buttonAgain = document.createElement('button')
    finalTimer()

    // —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
    buttonAgain.classList.add('buttonAgain')

    // –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä—É–±–∞—à–∫—É –∫–∞—Ä—Ç—ã
    //    if (window.application.level == "level-one") {
    //        for (let i = 0; i < 3; i++) {
    //            const random = Math.floor(Math.random() * Object.values(cards).length);
    //            array.push(Object.values(cards)[random].src);
    //            array = array.concat(array);
    //            shuffle(array);
    //        }
    //
    //        array.forEach((value) => {
    //            const card = document.createElement("img");
    //            card.setAttribute("src", value);
    //            card.classList.add("card", "card_hidden");
    //            cardField.appendChild(card);
    //        })
    //    }

    //    function shuffle() {
    //        // —Ä–∞–Ω–¥–æ–º –Ω–∞ 6 –∫–∞—Ä—Ç
    //        cards.forEach((card) => {
    //            let ramdomPos = Math.floor(Math.random(6) * 36)
    //            card.style.order = ramdomPos
    //        })
    //    }

    // –ø–æ –∫–ª–∏–∫—É –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É –ª–∏—Ü–æ–º –Ω–∞ –≤—Ä–µ–º—è
    //let currentRotation = 0
    //
    //currentRotation.addEventListener('click', function () {
    //    currentRotation += 90
    //    document.querySelector('#sample').style.transform =
    //        'rotate(' + currentRotation + 'deg)'
    //})
    //app.appendChild(container)
}

function renderButtonTwo() {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    const container = document.createElement('div')
    container.classList.add('container')

    let timerMinute = document.createElement('span')
    timerMinute.id = 'minute'
    timerMinute.label = '00'
    let timerSecond = document.createElement('span')
    timerSecond.id = 'second'
    timerSecond.label = '00'

    let timer = 0
    let timerInterval
    const second = document.getElementById('second')
    const minute = document.getElementById('minute')

    renderLevelButton()
    finalTimer()

    timerInterval = setInterval(function () {
        timer += 1 / 60
        timerSecond = Math.floor(timer) - Math.floor(timer / 60) * 60
        timerMinute = Math.floor(timer / 60)
        second.innerHTML =
            timerSecond < 10 ? '0' + timerSecond.toString() : timerSecond
        minute.innerHTML =
            timerMinute < 10 ? '0' + timerMinute.toString() : timerMinute
    }, 1000 / 60)

    function finalTimer() {
        clearInterval(timerInterval)
    }

    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä
    timerInterval.classList.add('startTimer')

    const buttonAgain = document.createElement('button')
    finalTimer()

    // —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
    buttonAgain.classList.add('buttonAgain')

    // –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä—É–±–∞—à–∫—É –∫–∞—Ä—Ç—ã

    //    function shuffle() {
    //        // —Ä–∞–Ω–¥–æ–º –Ω–∞ 6 –∫–∞—Ä—Ç
    //        cards.forEach((card) => {
    //            let ramdomPos = Math.floor(Math.random(6) * 36)
    //            card.style.order = ramdomPos
    //        })
    //    }

    let currentRotation = 0

    currentRotation.addEventListener('click', function () {
        currentRotation += 90
        document.querySelector('#sample').style.transform =
            'rotate(' + currentRotation + 'deg)'
    })
    app.appendChild(container)
}

function renderButtonThree() {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    const container = document.createElement('div')
    container.classList.add('container')

    let timerMinute = document.createElement('span')
    timerMinute.id = 'minute'
    timerMinute.label = '00'
    let timerSecond = document.createElement('span')
    timerSecond.id = 'second'
    timerSecond.label = '00'

    let timer = 0
    let timerInterval
    const second = document.getElementById('second')
    const minute = document.getElementById('minute')

    renderLevelButton()
    finalTimer()

    timerInterval = setInterval(function () {
        timer += 1 / 60
        timerSecond = Math.floor(timer) - Math.floor(timer / 60) * 60
        timerMinute = Math.floor(timer / 60)
        second.innerHTML =
            timerSecond < 10 ? '0' + timerSecond.toString() : timerSecond
        minute.innerHTML =
            timerMinute < 10 ? '0' + timerMinute.toString() : timerMinute
    }, 1000 / 60)

    function finalTimer() {
        clearInterval(timerInterval)
    }

    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä
    timerInterval.classList.add('startTimer')

    const buttonAgain = document.createElement('button')
    finalTimer()

    // —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
    buttonAgain.classList.add('buttonAgain')

    // –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä—É–±–∞—à–∫—É –∫–∞—Ä—Ç—ã

    //    function shuffle() {
    //        // —Ä–∞–Ω–¥–æ–º –Ω–∞ 6 –∫–∞—Ä—Ç
    //        cards.forEach((card) => {
    //            let ramdomPos = Math.floor(Math.random(6) * 36)
    //            card.style.order = ramdomPos
    //        })
    //    }

    let currentRotation = 0

    currentRotation.addEventListener('click', function () {
        currentRotation += 90
        document.querySelector('#sample').style.transform =
            'rotate(' + currentRotation + 'deg)'
    })
    app.appendChild(container)
}

function renderLevelScreen() {
    // —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('level-button', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

function renderLevelOneScreen() {
    // —ç–∫—Ä–∞–Ω 1 —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('button-one', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä—É –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
    window.application.renderBlock('button-again', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

function renderLevelTwoScreen() {
    // —ç–∫—Ä–∞–Ω 2 —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('button-two', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä—É –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è
    window.application.renderBlock('button-again', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

function renderLevelThreeScreen() {
    // —ç–∫—Ä–∞–Ω 3 —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('button-three', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä—É —Ç—Ä–µ—Ç—å–µ–≥–æ —É—Ä–æ–≤–Ω—è
    window.application.renderBlock('button-again', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

renderLevelScreen()
