//import Img from './static/img/—Ä—É–±–∞—à–∫–∞.svg'

// –Ω–∞—á–∏–Ω–∞–µ–º —Å –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
window.application = {
    // —Å–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è/–∏–≥—Ä—ã
    blocks: {},
    screens: {},
    renderScreen: function (screenName) {
        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞–±–æ—á–µ–≥–æ —ç–∫—Ä–∞–Ω–∞ –∏–≥—Ä—ã
        if (!window.application.screens[screenName]) {
            // screens - —ç–∫—Ä–∞–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
            console.log('–¢–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        } else {
            this.screens[screenName]
        }
        window.application.timers.forEach((element) => {
            clearInterval(element)
        })
    },

    renderBlock: function (blockName, container) {
        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –±–ª–æ–∫–∞
        if (!window.application.blocks[blockName]) {
            console.log('–¢–∞–∫–æ–≥–æ –±–ª–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        } else {
            this.blocks[blockName](container)
        }
    },
    timers: [], // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    level: [], // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
}

// –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à–∏ –±—É–¥—É—â–∏–µ —ç–∫—Ä–∞–Ω—ã

window.application.screens = {
    //—Å–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω—ã –¥–ª—è –≤—Å–µ–π –∏–≥—Ä—ã
    'level-choice': renderLevelScreen,
    'level-one': renderLevelOneScreen,
    'level-two': renderLevelTwoScreen,
    'level-three': renderLevelThreeScreen,
    // win: renderWinScreen,
    // lose: renderLoseScreen,
}

window.application.blocks = {
    // —Å–æ–∑–¥–∞–µ–º –±–ª–æ–∫–∏ –¥–ª—è –≤—Å–µ–π –∏–≥—Ä—ã, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º–∏
    'level-button': renderLevelButton,
    'button-one': renderButtonOne,
    'button-two': renderButtonTwo,
    'button-three': renderButtonThree,
    //  'win-text': renderWinText,
    //  'lose-text': renderLoseText,
}

//–ó–∞—Ç–µ–º –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—à–µ–º—É –¥–∏–≤—É –∏ –æ–±—ä—è–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–º

const app = document.querySelector('.root')
// –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º—É —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –¥–∏–≤—É

//—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω

const title = document.createElement('h2')
// —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫

// –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤—ã–±–æ—Ä–æ–º —É—Ä–æ–≤–Ω—è, –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—è –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É, –≥–¥–µ –ø–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–∏

function renderLevelButton(container) {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    container.classList.add('container')

    title.textContent = '–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å'
    // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    title.classList.add('title')
    container.appendChild(title)

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –∏ —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫–∏

    // –í—ã–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∏ –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    const choiceButtonOne = document.createElement('input')
    choiceButtonOne.type = 'radio'
    choiceButtonOne.name = 'r'
    choiceButtonOne.value = 'easy'
    choiceButtonOne.classList.add('choice-button-one')
    container.appendChild(choiceButtonOne)

    //—Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
    const choiceButtonTwo = document.createElement('input')
    choiceButtonTwo.type = 'radio'
    choiceButtonTwo.name = 'r'
    choiceButtonTwo.value = 'middle'
    choiceButtonTwo.classList.add('choice-button-two')
    container.appendChild(choiceButtonTwo)
    //—Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
    const choiceButtonThree = document.createElement('input')
    choiceButtonThree.type = 'radio'
    choiceButtonThree.name = 'r'
    choiceButtonThree.value = 'hard'
    choiceButtonThree.classList.add('choice-button-three')
    container.appendChild(choiceButtonThree)

    //—Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
    const button = document.createElement('button')
    button.textContent = '–°—Ç–∞—Ä—Ç'
    button.classList.add('button')
    container.appendChild(button)
    // –∫–Ω–æ–ø–∫–∞ —Å—Ç—Ä–∞—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è

    let radios = document.querySelectorAll('input') // –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫–æ –≤—Å–µ–º —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∞–º

    button.addEventListener('click', function () {
        const radios = document.querySelectorAll('input')

        for (let i = 0; i < radios.length; i++) {
            /* console.log(radios[i].checked) */
            /* –ï—Å–ª–∏ —Ä–∞–¥–∏–æ –∞–∫—Ç–∏–≤–µ–Ω */
            if (radios[i].checked) {
                /* –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –∏–≥—Ä—ã */
                gameMode = radios[i].value
                console.log(gameMode)
            }
        }
        if (choiceButtonOne.value) {
            renderLevelOneScreen()
        }
        if (choiceButtonTwo.value) {
            renderLevelTwoScreen()
        }
        if (choiceButtonThree.value) {
            renderLevelThreeScreen()
        }
    })

    setLevel()

    switch (
        radios //—Å—Ä–∞–≤–Ω–∏—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–∞–∑—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–≥—Ä–æ–∫–æ–≤
    ) {
        case 'choiceButtonOne':
            window.application.screens['renderLevelOneScreen'] =
                renderLevelOneScreen()
            window.application.screens.screenLevelOne
            break
        case 'choiceButtonTwo':
            window.application.screens['renderLevelTwoScreen'] =
                renderLevelTwoScreen()
            window.application.screens.screenLevelTwo
            break
        case 'choiceButtonThree':
            window.application.screens['renderLevelThreeScreen'] =
                renderLevelThreeScreen()
            window.application.screens.screenLevelThree
            break
        default: // –∏–Ω–∞—á–µ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –≤—ã–±—Ä–∞–Ω
            console.log('–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã –Ω–µ –≤—ã–±—Ä–∞–Ω')
            break
    }
}

let gameMode = ''

function setLevel() {
    let radios = document.querySelectorAll('input')
    console.log('üöÄ ~ file: index.js:193 ~ setLevel ~ radios:', radios)
}

function renderButtonOne(container) {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    container.classList.add('container')

    let timerMinute = document.createElement('span')
    timerMinute.id = 'minute'
    timerMinute.label = '00'
    let timerSecond = document.createElement('span')
    timerSecond.id = 'second'
    timerSecond.label = '00'

    let timer = 0
    let timerInterval
    const second = document.getElementById('second')
    const minute = document.getElementById('minute')

    renderLevelButton()
    finalTimer()

    timerInterval = setInterval(function () {
        timer += 1 / 60
        timerSecond = Math.floor(timer) - Math.floor(timer / 60) * 60
        timerMinute = Math.floor(timer / 60)
        second.innerHTML =
            timerSecond < 10 ? '0' + timerSecond.toString() : timerSecond
        minute.innerHTML =
            timerMinute < 10 ? '0' + timerMinute.toString() : timerMinute
    }, 1000 / 60)

    function finalTimer() {
        clearInterval(timerInterval)
    }

    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä
    timerInterval.classList.add('startTimer')

    const buttonAgain = document.createElement('button')
    finalTimer()

    // —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
    buttonAgain.classList.add('buttonAgain')

    // –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä—É–±–∞—à–∫—É –∫–∞—Ä—Ç—ã
    //    if (window.application.level == "level-one") {
    //        for (let i = 0; i < 3; i++) {
    //            const random = Math.floor(Math.random() * Object.values(cards).length);
    //            array.push(Object.values(cards)[random].src);
    //            array = array.concat(array);
    //            shuffle(array);
    //        }
    //
    //        array.forEach((value) => {
    //            const card = document.createElement("img");
    //            card.setAttribute("src", value);
    //            card.classList.add("card", "card_hidden");
    //            cardField.appendChild(card);
    //        })
    //    }

    //    function shuffle() {
    //        // —Ä–∞–Ω–¥–æ–º –Ω–∞ 6 –∫–∞—Ä—Ç
    //        cards.forEach((card) => {
    //            let ramdomPos = Math.floor(Math.random(6) * 36)
    //            card.style.order = ramdomPos
    //        })
    //    }

    let currentRotation = 0

    currentRotation.addEventListener('click', function () {
        currentRotation += 90
        document.querySelector('#sample').style.transform =
            'rotate(' + currentRotation + 'deg)'
    })
}

function renderButtonTwo(container) {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    container.classList.add('container')

    let timerMinute = document.createElement('span')
    timerMinute.id = 'minute'
    timerMinute.label = '00'
    let timerSecond = document.createElement('span')
    timerSecond.id = 'second'
    timerSecond.label = '00'

    let timer = 0
    let timerInterval
    const second = document.getElementById('second')
    const minute = document.getElementById('minute')

    renderLevelButton()
    finalTimer()

    timerInterval = setInterval(function () {
        timer += 1 / 60
        timerSecond = Math.floor(timer) - Math.floor(timer / 60) * 60
        timerMinute = Math.floor(timer / 60)
        second.innerHTML =
            timerSecond < 10 ? '0' + timerSecond.toString() : timerSecond
        minute.innerHTML =
            timerMinute < 10 ? '0' + timerMinute.toString() : timerMinute
    }, 1000 / 60)

    function finalTimer() {
        clearInterval(timerInterval)
    }

    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä
    timerInterval.classList.add('startTimer')

    const buttonAgain = document.createElement('button')
    finalTimer()

    // —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
    buttonAgain.classList.add('buttonAgain')

    // –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä—É–±–∞—à–∫—É –∫–∞—Ä—Ç—ã

    //    function shuffle() {
    //        // —Ä–∞–Ω–¥–æ–º –Ω–∞ 6 –∫–∞—Ä—Ç
    //        cards.forEach((card) => {
    //            let ramdomPos = Math.floor(Math.random(6) * 36)
    //            card.style.order = ramdomPos
    //        })
    //    }

    let currentRotation = 0

    currentRotation.addEventListener('click', function () {
        currentRotation += 90
        document.querySelector('#sample').style.transform =
            'rotate(' + currentRotation + 'deg)'
    })
}

function renderButtonThree(container) {
    //—Å—Ç–∏–ª–∏–∑—É–µ–º —Ñ–æ–Ω
    container.classList.add('container')

    let timerMinute = document.createElement('span')
    timerMinute.id = 'minute'
    timerMinute.label = '00'
    let timerSecond = document.createElement('span')
    timerSecond.id = 'second'
    timerSecond.label = '00'

    let timer = 0
    let timerInterval
    const second = document.getElementById('second')
    const minute = document.getElementById('minute')

    renderLevelButton()
    finalTimer()

    timerInterval = setInterval(function () {
        timer += 1 / 60
        timerSecond = Math.floor(timer) - Math.floor(timer / 60) * 60
        timerMinute = Math.floor(timer / 60)
        second.innerHTML =
            timerSecond < 10 ? '0' + timerSecond.toString() : timerSecond
        minute.innerHTML =
            timerMinute < 10 ? '0' + timerMinute.toString() : timerMinute
    }, 1000 / 60)

    function finalTimer() {
        clearInterval(timerInterval)
    }

    // —Å—Ç–∏–ª–∏–∑—É–µ–º —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä
    timerInterval.classList.add('startTimer')

    const buttonAgain = document.createElement('button')
    finalTimer()

    // —Å—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
    buttonAgain.classList.add('buttonAgain')

    // –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä—É–±–∞—à–∫—É –∫–∞—Ä—Ç—ã

    //    function shuffle() {
    //        // —Ä–∞–Ω–¥–æ–º –Ω–∞ 6 –∫–∞—Ä—Ç
    //        cards.forEach((card) => {
    //            let ramdomPos = Math.floor(Math.random(6) * 36)
    //            card.style.order = ramdomPos
    //        })
    //    }

    let currentRotation = 0

    currentRotation.addEventListener('click', function () {
        currentRotation += 90
        document.querySelector('#sample').style.transform =
            'rotate(' + currentRotation + 'deg)'
    })
}

function renderLevelScreen() {
    // —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('level-button', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

function renderLevelOneScreen() {
    // —ç–∫—Ä–∞–Ω 1 —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('button-one', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä—É –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
    window.application.renderBlock('button-again', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

function renderLevelTwoScreen() {
    // —ç–∫—Ä–∞–Ω 2 —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('button-two', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä—É –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è
    window.application.renderBlock('button-again', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

function renderLevelThreeScreen() {
    // —ç–∫—Ä–∞–Ω 3 —É—Ä–æ–≤–Ω—è
    app.textContent = ''

    const content = document.createElement('div') // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–≤

    window.application.renderBlock('button-three', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä—É —Ç—Ä–µ—Ç—å–µ–≥–æ —É—Ä–æ–≤–Ω—è
    window.application.renderBlock('button-again', content) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ

    // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM –¥–µ—Ä–µ–≤–æ
    app.appendChild(content)
}

renderLevelScreen()
